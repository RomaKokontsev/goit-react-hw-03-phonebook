{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.module.css","components/ContactsList/ContactListItem/ContactListItem.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","nameInputId","input","type","pattern","onChange","title","required","numberInputId","button","btnText","size","color","Component","Filter","filterLabel","filterInput","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","list","map","id","App","filter","addContact","newContact","shortid","generate","find","contact","alert","changeFilter","getVisibleContacts","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","FormContact","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b64e7ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__32KM_\",\"filterInput\":\"Filter_filterInput__3ghZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__-UpP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__24gq6\",\"label\":\"FormContact_label__1KSue\",\"input\":\"FormContact_input__203UL\",\"button\":\"FormContact_button__j9jWh\",\"btnText\":\"FormContact_btnText__31xr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__SgcEu\",\"listItemText\":\"ContactListItem_listItemText__U4NS-\",\"button\":\"ContactListItem_button__2RUAO\"};","import React, { Component } from \"react\";\n// import shortid from \"shortid\";\nimport s from \"./FormContact.module.css\";\nimport PropTypes from \"prop-types\";\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          <span className={s.btnText}>Add contact</span>{\" \"}\n          <AiOutlineUserAdd size=\"20px\" color=\"rgb(130, 27, 112)\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./ContactListItem.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AiOutlineUserDelete } from \"react-icons/ai\";\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete <AiOutlineUserDelete size=\"15px\" />\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import s from \"./ContactsList.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        contactName={name}\n        contactNumber={number}\n        onClickDeleteContact={() => onDeleteContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport FormContact from \"../FormContact/FormContact\";\nimport Filter from \"../Filter/Filter\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport \"./app.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n\n        <FormContact onSubmit={this.addContact} />\n\n        <h2>Contants</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        ></ContactsList>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}